<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompiler" num="572" delta="old" >"D:\users\ComputerArchitecture\lab4\Alu.v" Line 25: Macro &lt;<arg fmt="%s" index="1">ALU_XOR</arg>&gt; is redefined.
</msg>

<msg type="warning" file="HDLCompiler" num="572" delta="old" >"D:\users\ComputerArchitecture\lab4\Alu.v" Line 26: Macro &lt;<arg fmt="%s" index="1">ALU_NOR</arg>&gt; is redefined.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\display.v" Line 107: Result of <arg fmt="%d" index="1">17</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">16</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\display.v" Line 44: Result of <arg fmt="%d" index="1">4</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">3</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\display.v" Line 58: Signal &lt;<arg fmt="%s" index="1">data</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\pipeline.v" Line 118: Result of <arg fmt="%d" index="1">9</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">8</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\pipeline.v" Line 123: Result of <arg fmt="%d" index="1">5</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">4</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\pipeline.v" Line 130: Result of <arg fmt="%d" index="1">4</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">3</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\if_stage.v" Line 130: Signal &lt;<arg fmt="%s" index="1">run</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\if_stage.v" Line 136: Signal &lt;<arg fmt="%s" index="1">pc</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="1499" delta="old" >"D:\users\ComputerArchitecture\lab4\ipcore_dir\instr_mem.v" Line 39: Empty module &lt;<arg fmt="%s" index="1">instr_mem</arg>&gt; remains a black box.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\pipeline.v" Line 181: Assignment to <arg fmt="%s" index="1">IF_ins_type</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\id_stage.v" Line 101: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 112: Signal &lt;<arg fmt="%s" index="1">raddr_A</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 113: Signal &lt;<arg fmt="%s" index="1">wdata</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 116: Signal &lt;<arg fmt="%s" index="1">raddr_A</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 117: Signal &lt;<arg fmt="%s" index="1">r0</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 118: Signal &lt;<arg fmt="%s" index="1">r1</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 119: Signal &lt;<arg fmt="%s" index="1">r2</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 120: Signal &lt;<arg fmt="%s" index="1">r3</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 121: Signal &lt;<arg fmt="%s" index="1">r4</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 122: Signal &lt;<arg fmt="%s" index="1">r5</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 123: Signal &lt;<arg fmt="%s" index="1">r6</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 124: Signal &lt;<arg fmt="%s" index="1">r7</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 125: Signal &lt;<arg fmt="%s" index="1">r8</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 126: Signal &lt;<arg fmt="%s" index="1">r9</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 127: Signal &lt;<arg fmt="%s" index="1">r10</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 128: Signal &lt;<arg fmt="%s" index="1">r11</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 129: Signal &lt;<arg fmt="%s" index="1">r12</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 130: Signal &lt;<arg fmt="%s" index="1">r13</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 131: Signal &lt;<arg fmt="%s" index="1">r14</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 132: Signal &lt;<arg fmt="%s" index="1">r15</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 133: Signal &lt;<arg fmt="%s" index="1">r0</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 136: Signal &lt;<arg fmt="%s" index="1">raddr_B</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 137: Signal &lt;<arg fmt="%s" index="1">wdata</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 140: Signal &lt;<arg fmt="%s" index="1">raddr_B</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 141: Signal &lt;<arg fmt="%s" index="1">r0</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 142: Signal &lt;<arg fmt="%s" index="1">r1</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 143: Signal &lt;<arg fmt="%s" index="1">r2</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 144: Signal &lt;<arg fmt="%s" index="1">r3</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 145: Signal &lt;<arg fmt="%s" index="1">r4</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 146: Signal &lt;<arg fmt="%s" index="1">r5</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 147: Signal &lt;<arg fmt="%s" index="1">r6</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 148: Signal &lt;<arg fmt="%s" index="1">r7</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 149: Signal &lt;<arg fmt="%s" index="1">r8</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 150: Signal &lt;<arg fmt="%s" index="1">r9</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 151: Signal &lt;<arg fmt="%s" index="1">r10</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 152: Signal &lt;<arg fmt="%s" index="1">r11</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 153: Signal &lt;<arg fmt="%s" index="1">r12</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 154: Signal &lt;<arg fmt="%s" index="1">r13</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 155: Signal &lt;<arg fmt="%s" index="1">r14</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 156: Signal &lt;<arg fmt="%s" index="1">r15</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 157: Signal &lt;<arg fmt="%s" index="1">r0</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 166: Signal &lt;<arg fmt="%s" index="1">r0</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 167: Signal &lt;<arg fmt="%s" index="1">r1</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 168: Signal &lt;<arg fmt="%s" index="1">r2</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 169: Signal &lt;<arg fmt="%s" index="1">r3</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 170: Signal &lt;<arg fmt="%s" index="1">r4</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 171: Signal &lt;<arg fmt="%s" index="1">r5</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 172: Signal &lt;<arg fmt="%s" index="1">r6</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 173: Signal &lt;<arg fmt="%s" index="1">r7</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 174: Signal &lt;<arg fmt="%s" index="1">r8</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 175: Signal &lt;<arg fmt="%s" index="1">r9</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 176: Signal &lt;<arg fmt="%s" index="1">r10</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 177: Signal &lt;<arg fmt="%s" index="1">r11</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 178: Signal &lt;<arg fmt="%s" index="1">r12</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 179: Signal &lt;<arg fmt="%s" index="1">r13</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 180: Signal &lt;<arg fmt="%s" index="1">r14</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 181: Signal &lt;<arg fmt="%s" index="1">r15</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="old" >"D:\users\ComputerArchitecture\lab4\regfile.v" Line 182: Signal &lt;<arg fmt="%s" index="1">r0</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 141: Assignment to <arg fmt="%s" index="1">rd</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 144: Assignment to <arg fmt="%s" index="1">if_opcode</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 145: Assignment to <arg fmt="%s" index="1">if_rs</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 146: Assignment to <arg fmt="%s" index="1">if_rt</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 147: Assignment to <arg fmt="%s" index="1">if_rd</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 148: Assignment to <arg fmt="%s" index="1">if_func</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 150: Assignment to <arg fmt="%s" index="1">ex_rs</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 151: Assignment to <arg fmt="%s" index="1">ex_rt</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 152: Assignment to <arg fmt="%s" index="1">ex_rd</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 153: Assignment to <arg fmt="%s" index="1">mem_rt</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 154: Assignment to <arg fmt="%s" index="1">mem_rd</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 155: Assignment to <arg fmt="%s" index="1">wb_rd</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 156: Assignment to <arg fmt="%s" index="1">wb_rt</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 157: Assignment to <arg fmt="%s" index="1">ex_op</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 158: Assignment to <arg fmt="%s" index="1">mem_op</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 159: Assignment to <arg fmt="%s" index="1">wb_op</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 161: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 162: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 163: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 164: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 166: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 168: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 169: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 170: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 171: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ctrl_unit.v" Line 172: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="old" >"D:\users\ComputerArchitecture\lab4\pipeline.v" Line 184: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">cu_regrt</arg>&gt;. Formal port size is <arg fmt="%d" index="2">1</arg>-bit while actual signal size is <arg fmt="%d" index="1">5</arg>-bit.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="old" >"D:\users\ComputerArchitecture\lab4\ex_stage.v" Line 68: Result of <arg fmt="%d" index="1">32</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">1</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\ex_stage.v" Line 72: Assignment to <arg fmt="%s" index="1">epc4</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="old" >"D:\users\ComputerArchitecture\lab4\pipeline.v" Line 188: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">id_regrt</arg>&gt;. Formal port size is <arg fmt="%d" index="2">1</arg>-bit while actual signal size is <arg fmt="%d" index="1">5</arg>-bit.
</msg>

<msg type="warning" file="HDLCompiler" num="1499" delta="old" >"D:\users\ComputerArchitecture\lab4\ipcore_dir\data_mem.v" Line 39: Empty module &lt;<arg fmt="%s" index="1">data_mem</arg>&gt; remains a black box.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\pipeline.v" Line 193: Assignment to <arg fmt="%s" index="1">mem_branch</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="189" delta="old" >"D:\users\ComputerArchitecture\lab4\pipeline.v" Line 193: Size mismatch in connection of port &lt;<arg fmt="%s" index="3">mem_pc</arg>&gt;. Formal port size is <arg fmt="%d" index="2">32</arg>-bit while actual signal size is <arg fmt="%d" index="1">1</arg>-bit.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="old" >"D:\users\ComputerArchitecture\lab4\pipeline.v" Line 197: Assignment to <arg fmt="%s" index="1">OUT_ins_type</arg> ignored, since the identifier is never used
</msg>

<msg type="info" file="Xst" num="3210" delta="old" >&quot;<arg fmt="%s" index="1">D:\users\ComputerArchitecture\lab4\pipeline.v</arg>&quot; line <arg fmt="%s" index="2">180</arg>: Output port &lt;<arg fmt="%s" index="3">IF_ins_type</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">x_if_stage</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="old" >&quot;<arg fmt="%s" index="1">D:\users\ComputerArchitecture\lab4\pipeline.v</arg>&quot; line <arg fmt="%s" index="2">180</arg>: Output port &lt;<arg fmt="%s" index="3">IF_ins_number</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">x_if_stage</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="old" >&quot;<arg fmt="%s" index="1">D:\users\ComputerArchitecture\lab4\pipeline.v</arg>&quot; line <arg fmt="%s" index="2">192</arg>: Output port &lt;<arg fmt="%s" index="3">mem_pc</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">x_mem_stage</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="old" >&quot;<arg fmt="%s" index="1">D:\users\ComputerArchitecture\lab4\pipeline.v</arg>&quot; line <arg fmt="%s" index="2">192</arg>: Output port &lt;<arg fmt="%s" index="3">mem_branch</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">x_mem_stage</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="old" >&quot;<arg fmt="%s" index="1">D:\users\ComputerArchitecture\lab4\pipeline.v</arg>&quot; line <arg fmt="%s" index="2">196</arg>: Output port &lt;<arg fmt="%s" index="3">WB_ins_type</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">x_wb_stage</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="info" file="Xst" num="3210" delta="old" >&quot;<arg fmt="%s" index="1">D:\users\ComputerArchitecture\lab4\pipeline.v</arg>&quot; line <arg fmt="%s" index="2">196</arg>: Output port &lt;<arg fmt="%s" index="3">WB_ins_number</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">x_wb_stage</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;31&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;30&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;29&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;28&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;27&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;26&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;25&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;24&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;23&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;22&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;21&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;20&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;19&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;18&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;17&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;16&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;15&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;14&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;13&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;12&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;11&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;10&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;9&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;8&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_A&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;31&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;30&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;29&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;28&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;27&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;26&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;25&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;24&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;23&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;22&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;21&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;20&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;19&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;18&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;17&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;16&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;15&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;14&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;13&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;12&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;11&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;10&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;9&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;8&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">rdata_B&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">if_instr</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">clk</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">rst</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">cu_aluc&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">cu_aluc&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">cu_aluc&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">cu_aluc&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="info" file="Xst" num="3210" delta="old" >&quot;<arg fmt="%s" index="1">D:\users\ComputerArchitecture\lab4\ex_stage.v</arg>&quot; line <arg fmt="%s" index="2">71</arg>: Output port &lt;<arg fmt="%s" index="3">e_pc4</arg>&gt; of the instance &lt;<arg fmt="%s" index="4">x_Reg_ID_EXE</arg>&gt; is unconnected or connected to loadless signal.
</msg>

<msg type="warning" file="Xst" num="653" delta="old" >Signal &lt;<arg fmt="%s" index="1">ex_pc</arg>&gt; is used but never assigned. This sourceless signal will be automatically connected to value <arg fmt="%s" index="2">GND</arg>.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">odata_imm&lt;5:0&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">odata_imm&lt;31:11&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;30&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;29&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;28&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;27&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;26&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;25&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;24&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;23&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;22&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;21&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;20&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;19&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;18&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;17&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;16&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;15&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;14&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;13&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;12&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;11&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;10&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;9&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;8&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="old" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">o_alu&lt;31&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="info" file="Xst" num="3231" delta="old" >The small RAM &lt;<arg fmt="%s" index="1">Mram_segment</arg>&gt; will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
</msg>

<msg type="info" file="Xst" num="3231" delta="old" >The small RAM &lt;<arg fmt="%s" index="1">Mram_cnt[2]_GND_2_o_wide_mux_2_OUT</arg>&gt; will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">mpc_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">Reg_EXE_MEM</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">31 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;mpc_1&gt; &lt;mpc_2&gt; &lt;mpc_3&gt; &lt;mpc_4&gt; &lt;mpc_5&gt; &lt;mpc_6&gt; &lt;mpc_7&gt; &lt;mpc_8&gt; &lt;mpc_9&gt; &lt;mpc_10&gt; &lt;mpc_11&gt; &lt;mpc_12&gt; &lt;mpc_13&gt; &lt;mpc_14&gt; &lt;mpc_15&gt; &lt;mpc_16&gt; &lt;mpc_17&gt; &lt;mpc_18&gt; &lt;mpc_19&gt; &lt;mpc_20&gt; &lt;mpc_21&gt; &lt;mpc_22&gt; &lt;mpc_23&gt; &lt;mpc_24&gt; &lt;mpc_25&gt; &lt;mpc_26&gt; &lt;mpc_27&gt; &lt;mpc_28&gt; &lt;mpc_29&gt; &lt;mpc_30&gt; &lt;mpc_31&gt; </arg>
</msg>

<msg type="warning" file="Xst" num="1710" delta="old" >FF/Latch &lt;<arg fmt="%s" index="1">mpc_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Reg_EXE_MEM</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_branch_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_branch_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_31</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_30</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_29</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_28</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_27</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_26</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_25</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_24</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_23</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_22</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_21</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_20</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_19</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_18</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_17</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_16</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_15</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_14</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_13</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_12</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_11</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_10</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_9</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_8</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_7</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_6</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_5</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_4</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_ex_stage/x_Reg_ID_EXE/e_pc4_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_mem_stage/x_Reg_EXE_MEM/mzero</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_mem_stage/x_Reg_EXE_MEM/mbranch_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_mem_stage/x_Reg_EXE_MEM/mbranch_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_wb_stage/x_Reg_MEM_WB/WB_ins_number_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_wb_stage/x_Reg_MEM_WB/WB_ins_number_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_wb_stage/x_Reg_MEM_WB/WB_ins_number_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_wb_stage/x_Reg_MEM_WB/WB_ins_number_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_wb_stage/x_Reg_MEM_WB/WB_ins_type_3</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_wb_stage/x_Reg_MEM_WB/WB_ins_type_2</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_wb_stage/x_Reg_MEM_WB/WB_ins_type_1</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="2677" delta="old" >Node &lt;<arg fmt="%s" index="1">x_wb_stage/x_Reg_MEM_WB/WB_ins_type_0</arg>&gt; of sequential type is unconnected in block &lt;<arg fmt="%s" index="2">pipeline</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_10</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_10&gt; &lt;p2/c1/cnt_10&gt; &lt;p1/c1/cnt_10&gt; &lt;p0/c1/cnt_10&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_11</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_11&gt; &lt;p2/c1/cnt_11&gt; &lt;p1/c1/cnt_11&gt; &lt;p0/c1/cnt_11&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_12</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_12&gt; &lt;p2/c1/cnt_12&gt; &lt;p1/c1/cnt_12&gt; &lt;p0/c1/cnt_12&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_13</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_13&gt; &lt;p2/c1/cnt_13&gt; &lt;p1/c1/cnt_13&gt; &lt;p0/c1/cnt_13&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/oclk</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/oclk&gt; &lt;p2/c1/oclk&gt; &lt;p1/c1/oclk&gt; &lt;p0/c1/oclk&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_14</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_14&gt; &lt;p2/c1/cnt_14&gt; &lt;p1/c1/cnt_14&gt; &lt;p0/c1/cnt_14&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_15</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_15&gt; &lt;p2/c1/cnt_15&gt; &lt;p1/c1/cnt_15&gt; &lt;p0/c1/cnt_15&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_0&gt; &lt;p2/c1/cnt_0&gt; &lt;p1/c1/cnt_0&gt; &lt;p0/c1/cnt_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_1&gt; &lt;p2/c1/cnt_1&gt; &lt;p1/c1/cnt_1&gt; &lt;p0/c1/cnt_1&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_2</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_2&gt; &lt;p2/c1/cnt_2&gt; &lt;p1/c1/cnt_2&gt; &lt;p0/c1/cnt_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_3</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_3&gt; &lt;p2/c1/cnt_3&gt; &lt;p1/c1/cnt_3&gt; &lt;p0/c1/cnt_3&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_4&gt; &lt;p2/c1/cnt_4&gt; &lt;p1/c1/cnt_4&gt; &lt;p0/c1/cnt_4&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_5</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_5&gt; &lt;p2/c1/cnt_5&gt; &lt;p1/c1/cnt_5&gt; &lt;p0/c1/cnt_5&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_6&gt; &lt;p2/c1/cnt_6&gt; &lt;p1/c1/cnt_6&gt; &lt;p0/c1/cnt_6&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_7</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_7&gt; &lt;p2/c1/cnt_7&gt; &lt;p1/c1/cnt_7&gt; &lt;p0/c1/cnt_7&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_8</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_8&gt; &lt;p2/c1/cnt_8&gt; &lt;p1/c1/cnt_8&gt; &lt;p0/c1/cnt_8&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">d0/c0/cnt_9</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">pipeline</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p3/c1/cnt_9&gt; &lt;p2/c1/cnt_9&gt; &lt;p1/c1/cnt_9&gt; &lt;p0/c1/cnt_9&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2169" delta="old" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>

